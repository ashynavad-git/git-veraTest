# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: SAST Scan with manual
env:
  V_ID: ${{ secrets.VERACODE_API_ID }}
  V_KEY: ${{ secrets.VERACODE_API_KEY }}
  
on:
  workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Build with Maven
      run: mvn package
      
        
 #   - name: wrapper
 #     run: |
 #       wget https://tools.veracode.com/integrations/API-Wrappers/Java/bin/VeracodeJavaAPI.zip  
 #   - uses: montudor/action-zip@v1
 #     with:
 #       args: unzip -qq VeracodeJavaAPI.zip -d dir

        
  #  - name: Run Pipeline Scanner
  #    run: Java -jar VeracodeJavaAPI.jar -vid "${{secrets.VERACODE_API_ID}}" -vkey "${{secrets.VERACODE_API_KEY}}" -action DetailedReport -buildid 34427951 -outputfilepath /Users/amitashokshynavad/downloads/GitTest.pdf -format pdf
  
    - name: Veracode Policy Scan
      run: |
         - VERACODE_WRAPPER_VERSION=$(curl -sS "https://search.maven.org/solrsearch/select?q=g:%22com.veracode.vosp.api.wrappers%22&rows=20&wt=json" | jq -r '.response.docs[0].latestVersion') && curl -sS -o veracode-wrapper.jar "https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/${VERACODE_WRAPPER_VERSION}/vosp-api-wrappers-java-${VERACODE_WRAPPER_VERSION}.jar"
         - java -jar veracode-wrapper.jar -vid $VERACODE_API_ID -vkey $VERACODE_API_KEY
                        -action uploadandscan -appname "Github-Veracode" -filepath "app/target/verademo.war"
                         -createprofile true -version "$buildnumber"
                        -sandboxname "Github-Manula-Script" -createsandbox true -autoscan true

  
